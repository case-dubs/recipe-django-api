services:
  app:
    # build docker file inside our current(root) directory
    build:
      context: .
      args:
        # If we run using docker compose, set to dev
        - DEV=true
    # maps port 8000 on lock machine to port 8000 on docker container. how we can access network on local machine when we want to connect to our server
    ports:
      - "8000:8000"
    # maps/syncs app directory on local project to app container on docker
    volumes:
      - ./app:/app
    # default command used to run service 
    # Adding in our wait_for_db method to avoid db/app race conditions
    # running db migrations
    # starting dev server
    command: >
      sh -c "python manage.py wait_for_db &&
              python manage.py migrate &&
              python manage.py runserver 0.0.0.0:8000"
    # variables here should match eb environment values below
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=changeme
    # App service depends on db service so it waits for db to load to load the app
    depends_on:
      - db
  
  db: 
    image: postgres:13-alpine
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    # Set initial config for database
    #this will only be used for dev server. This isn't a publically accessible database. It's just dev
    ##WARNING: If app were actually deployed, don't hardcode variables inside sourcecode 
    environment:
      - POSTGRES_DB=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=changeme

volumes:
  dev-db-data: